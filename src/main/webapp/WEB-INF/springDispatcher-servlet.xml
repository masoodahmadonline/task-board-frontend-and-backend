<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd"
        >


    <security:global-method-security pre-post-annotations="enabled"/>
    <context:component-scan base-package="web" >
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"		/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" 	/>
    </context:component-scan> 
  <mvc:annotation-driven />
<!--  <context:annotation-config />-->
    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/>
    
<!--    <mvc:resources mapping="/resources/**" location="/resources/" />-->
    <mvc:default-servlet-handler /> <!-- this will also work as mvc:resources mappings-->
    <!--
    Most controllers will use the ControllerClassNameHandlerMapping above, but
    for the index controller we are using ParameterizableViewController, so we must
    define an explicit mapping for it.
    -->
    <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="index.htm">indexController</prop>
            </props>
        </property>
    </bean>

    <bean id="viewResolver"
                class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<!--          class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        
<!--             class="org.springframework.web.servlet.view.UrlBasedViewResolver" >-->
          <property name="prefix" value="/WEB-INF/view/jsp/" />
            <property name="suffix" value=".jsp" />
    </bean>        

    <!--
    The index controller.
    -->
    <bean name="indexController"
          class="org.springframework.web.servlet.mvc.ParameterizableViewController">
          <property name="viewName" value="index" />
    </bean>
    
    
    
     <!---
     ##########################################################################
    Hibernate
    
    -->
<!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="${jdbc.url}jdbc:postgresql://localhost:5432/postgres" />
        <property name="username" value="postgres" />
        <property name="password" value="abc" />
    </bean>
 
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="web.entity" />
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</prop>
            </props>
 
        </property>
    </bean>
 
    <tx:annotation-driven transaction-manager="transactionManager"/>
 
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    ###########################################################
    -->
 
    
<!--

    JPA based instead of hibernate
    
-->
        <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
<!-- 
    	This configures the EntityManagerFactory object used for JPA/Spring managed persistent objects. 
   	 -->
   	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
   		<property name="persistenceXmlLocation" value="classpath*:META-INF/persistence.xml" />
   		<property name="persistenceUnitName" value="persistence-unit-demo" /> 
   		<property name="dataSource" ref="dataSource" />
                <property name="packagesToScan" value="web.entity" />
   		<property name="jpaVendorAdapter">
   			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                                <property name="database" value="POSTGRESQL" />
<!--   	giving errors		<property name="databasePlatorm" value="org.hibernate.dialect.PostgreSQLDialect"/>-->
<!--                                <property name="database" value="HSQL" />-->  
   				<property name="showSql" value="true" />
   				<property name="generateDdl" value="true" />   				   		
   			</bean>
   		</property>   
                <property name="jpaProperties">
                    <props>
                        <!--<prop key="hibernate.hbm2ddl.auto">create-drop</prop>-->
                        <prop key="hibernate.hbm2ddl.auto">update</prop>
                        <!--<prop key="hibernate.hbm2ddl.auto">validate</prop>-->
                    </props>
                </property>		   		 	   		
   	</bean> 
   	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
   	<!-- Pulls database connection from the tomcat container's context database pool via JNDI -->
<!--   	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/mssqlserver" resource-ref="true"/>-->

        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
            <property name="driverClassName" value="org.postgresql.Driver" />
            <property name="url" value="jdbc:postgresql://localhost:5432/tm" />
            <property name="username" value="postgres" />
            <property name="password" value="abc" />
        </bean>
   	
   	
   	
   	<!--
		Sets up our transaction manager. 
	 -->
   	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
   		<property name="entityManagerFactory" ref="entityManagerFactory" />
   		<property name="jpaDialect" ref="jpaDialect" />
   		<property name="dataSource" ref="dataSource" />
<!-- giving errors               <property name="loadTimeWeaver">
                    <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
                </property>-->
   	</bean>
   	
   		<!--
   		Defines our transaction manager for Transactional annotations.
   	 -->
   	<tx:annotation-driven transaction-manager="transactionManager" />
	  
	<bean id="sessionFactory" factory-bean="entityManagerFactory" factory-method="getSessionFactory" />
              
    
        
        
        <!--Internationalization ########################## -->
        
        <bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>
 
	<bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="language" />
	</bean>
 
	<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" >
		<property name="interceptors">
		   <list>
			<ref bean="localeChangeInterceptor" />
		   </list>
		</property>
	</bean>
 

 
	<!-- Register the welcome.properties -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
	</bean>
        
        <!--jackson support-->
<!--        <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
        <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
            <property name="messageConverters">
                <list>
                    <ref bean="jacksonMessageConverter"/>
                </list>
            </property>
        </bean>-->

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="50000000"/>
    </bean>
    
    
    <!-- Jasper -->
    
    <bean class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="location" value="/WEB-INF/jasper-views.xml"/>
        <property name="order" value="0"/>
    </bean> 
        
        
        
</beans>

